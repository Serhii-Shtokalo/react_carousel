{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","containerWidth","itemWidth","frameSize","step","animationDuration","transformPoint","nextButtonIsDisabled","prevButtonIsDisabled","moveNext","newWidth","setState","movePrev","setFrameSize","value","number","setItemWidth","setStep","setAnimationDuration","images","this","props","className","style","width","transform","transition","map","image","index","src","alt","toString","type","onClick","disabled","htmlFor","min","max","id","onChange","e","target","event","React","Component","App","length","ReactDOM","render","document","getElementById"],"mappings":"uPAkBMA,E,4MACJC,MAAQ,CACNC,eAAgB,KAChBC,UAAW,IACXC,UAAW,EACXC,KAAM,EACNC,kBAAmB,IACnBC,eAAgB,EAChBC,sBAAsB,EACtBC,sBAAsB,G,EAGxBC,SAAW,WACT,MAGI,EAAKT,MAFPC,EADF,EACEA,eAAgBC,EADlB,EACkBA,UAAWI,EAD7B,EAC6BA,eAAgBF,EAD7C,EAC6CA,KAAMD,EADnD,EACmDA,UAG/CO,EAAWJ,EAAiBF,EAAOF,EAEnCQ,GAAYT,EAAiBE,EAAYD,IAC3CQ,EAAWT,EAAiBE,EAAYD,EAExC,EAAKS,SAAS,CACZL,eAAgBI,EAChBH,sBAAsB,EACtBC,sBAAsB,KAItBE,EAAW,GAAKA,EAAWT,EAAiBE,EAAYD,GAC1D,EAAKS,SAAS,CACZL,eAAgBI,EAChBF,sBAAsB,K,EAK5BI,SAAW,WACT,MAEI,EAAKZ,MADPC,EADF,EACEA,eAAgBC,EADlB,EACkBA,UAEdQ,EAHJ,EAC6BJ,eAD7B,EAC6CF,KAENF,EAEnCQ,GAAY,IACdA,EAAW,EAEX,EAAKC,SAAS,CACZL,eAAgBI,EAChBF,sBAAsB,EACtBD,sBAAsB,KAItBG,EAAW,GAAKA,GAAYT,GAC9B,EAAKU,SAAS,CACZL,eAAgBI,EAChBH,sBAAsB,K,EAK5BM,aAAe,SAACC,GACd,IAAMC,GAAUD,EAEhB,EAAKH,SAAS,CAAER,UAAWY,K,EAG7BC,aAAe,SAACF,GACd,IAAMC,GAAUD,EAEhB,EAAKH,SAAS,CACZT,UAAWa,EACXd,eAAgB,GAAKc,EACrBT,eAAgB,EAChBE,sBAAsB,EACtBD,sBAAsB,K,EAI1BU,QAAU,SAACH,GACT,IAAMC,GAAUD,EAEhB,EAAKH,SAAS,CAAEP,KAAMW,K,EAGxBG,qBAAuB,SAACJ,GACtB,IAAMC,GAAUD,EAEhB,EAAKH,SAAS,CAAEN,kBAAmBU,K,4CAGrC,WAAU,IAAD,OACCI,EAAWC,KAAKC,MAAhBF,OAER,OACE,sBACEG,UAAU,YACVC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,KAAKpB,MAAMG,UAAYiB,KAAKpB,MAAME,UAAvC,OAFhB,UAIE,qBACEoB,UAAU,WACVC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,KAAKpB,MAAMC,eAAhB,OAFhB,SAIE,oBACEqB,UAAU,iBACVC,MAAO,CACLE,UAAU,cAAD,QAAiBL,KAAKpB,MAAMM,eAA5B,OACToB,WAAW,GAAD,OAAKN,KAAKpB,MAAMK,kBAAhB,OAJd,SAOGc,EAAOQ,KAAI,SAACC,EAAOC,GAClB,OACE,6BACE,qBACEC,IAAKF,EACLG,IAAKF,EAAMG,WACXT,MAAO,CAAEC,MAAM,GAAD,OAAK,EAAKxB,MAAME,UAAhB,UAJT0B,UAWjB,sBAAKN,UAAU,MAAf,UACE,gCACE,wBACEW,KAAK,SACLC,QAASd,KAAKR,SACduB,SAAUf,KAAKpB,MAAMQ,qBAHvB,kBAQA,wBACEyB,KAAK,SACLC,QAASd,KAAKX,SACd0B,SAAUf,KAAKpB,MAAMO,qBAHvB,qBASF,wBAAO6B,QAAQ,YAAf,sBAEE,uBACEH,KAAK,SACLI,IAAI,IACJC,IAAI,KACJC,GAAG,YACHzB,MAAOM,KAAKpB,MAAMG,UAClBqC,SAAU,SAACC,GACT,EAAK5B,aAAa4B,EAAEC,OAAO5B,aAKjC,wBAAOsB,QAAQ,YAAf,sBAEE,uBACEH,KAAK,SACLI,IAAI,MACJC,IAAI,MACJlC,KAAK,KACLmC,GAAG,YACHzB,MAAOM,KAAKpB,MAAME,UAClBsC,SAAU,SAACG,GACT,EAAK3B,aAAa2B,EAAMD,OAAO5B,aAKrC,wBAAOsB,QAAQ,OAAf,iBAEE,uBACEH,KAAK,SACLI,IAAI,IACJC,IAAI,IACJC,GAAG,OACHzB,MAAOM,KAAKpB,MAAMI,KAClBoC,SAAU,SAACG,GACT,EAAK1B,QAAQ0B,EAAMD,OAAO5B,aAKhC,wBAAOsB,QAAQ,oBAAf,8BAEE,uBACEH,KAAK,SACLI,IAAI,OACJC,IAAI,OACJlC,KAAK,MACLmC,GAAG,oBACHzB,MAAOM,KAAKpB,MAAMK,kBAClBmC,SAAU,SAACG,GACT,EAAKzB,qBAAqByB,EAAMD,OAAO5B,uB,GAnMhC8B,IAAMC,WA6Md9C,ICvNT+C,E,4MACJ9C,MAAQ,CACNmB,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWC,KAAKpB,MAAhBmB,OAER,OACE,sBAAKG,UAAU,MAAf,UAEE,gDAAmBH,EAAO4B,OAA1B,aAEA,cAAC,EAAD,CAAU5B,OAAQA,W,GAxBRyB,IAAMC,WA8BTC,ICnCfE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.91ae014b.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n}\n\ninterface State {\n  containerWidth: number;\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  transformPoint: number;\n  nextButtonIsDisabled: boolean;\n  prevButtonIsDisabled: boolean;\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    containerWidth: 1300,\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    transformPoint: 0,\n    nextButtonIsDisabled: false,\n    prevButtonIsDisabled: true,\n  };\n\n  moveNext = () => {\n    const {\n      containerWidth, itemWidth, transformPoint, step, frameSize,\n    }\n      = this.state;\n    let newWidth = transformPoint + step * itemWidth;\n\n    if (newWidth >= containerWidth - frameSize * itemWidth) {\n      newWidth = containerWidth - frameSize * itemWidth;\n\n      this.setState({\n        transformPoint: newWidth,\n        nextButtonIsDisabled: true,\n        prevButtonIsDisabled: false,\n      });\n    }\n\n    if (newWidth > 0 && newWidth < containerWidth - frameSize * itemWidth) {\n      this.setState({\n        transformPoint: newWidth,\n        prevButtonIsDisabled: false,\n      });\n    }\n  };\n\n  movePrev = () => {\n    const {\n      containerWidth, itemWidth, transformPoint, step,\n    } = this.state;\n    let newWidth = transformPoint - step * itemWidth;\n\n    if (newWidth <= 0) {\n      newWidth = 0;\n\n      this.setState({\n        transformPoint: newWidth,\n        prevButtonIsDisabled: true,\n        nextButtonIsDisabled: false,\n      });\n    }\n\n    if (newWidth > 0 && newWidth <= containerWidth) {\n      this.setState({\n        transformPoint: newWidth,\n        nextButtonIsDisabled: false,\n      });\n    }\n  };\n\n  setFrameSize = (value: string) => {\n    const number = +value;\n\n    this.setState({ frameSize: number });\n  };\n\n  setItemWidth = (value: string) => {\n    const number = +value;\n\n    this.setState({\n      itemWidth: number,\n      containerWidth: 10 * number,\n      transformPoint: 0,\n      prevButtonIsDisabled: true,\n      nextButtonIsDisabled: false,\n    });\n  };\n\n  setStep = (value: string) => {\n    const number = +value;\n\n    this.setState({ step: number });\n  };\n\n  setAnimationDuration = (value: string) => {\n    const number = +value;\n\n    this.setState({ animationDuration: number });\n  };\n\n  render() {\n    const { images } = this.props;\n\n    return (\n      <div\n        className=\"container\"\n        style={{ width: `${this.state.frameSize * this.state.itemWidth}px` }}\n      >\n        <div\n          className=\"Carousel\"\n          style={{ width: `${this.state.containerWidth}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${-this.state.transformPoint}px)`,\n              transition: `${this.state.animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => {\n              return (\n                <li key={image}>\n                  <img\n                    src={image}\n                    alt={index.toString()}\n                    style={{ width: `${this.state.itemWidth}px` }}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        <div className=\"nav\">\n          <div>\n            <button\n              type=\"button\"\n              onClick={this.movePrev}\n              disabled={this.state.prevButtonIsDisabled}\n            >\n              Prev\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.moveNext}\n              disabled={this.state.nextButtonIsDisabled}\n            >\n              Next\n            </button>\n          </div>\n\n          <label htmlFor=\"frameSize\">\n            FrameSize\n            <input\n              type=\"number\"\n              min=\"1\"\n              max=\"10\"\n              id=\"frameSize\"\n              value={this.state.frameSize}\n              onChange={(e) => {\n                this.setFrameSize(e.target.value);\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"itemWidth\">\n            itemWidth\n            <input\n              type=\"number\"\n              min=\"130\"\n              max=\"200\"\n              step=\"10\"\n              id=\"itemWidth\"\n              value={this.state.itemWidth}\n              onChange={(event) => {\n                this.setItemWidth(event.target.value);\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"step\">\n            Step\n            <input\n              type=\"number\"\n              min=\"1\"\n              max=\"5\"\n              id=\"step\"\n              value={this.state.step}\n              onChange={(event) => {\n                this.setStep(event.target.value);\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            AnimationDuration\n            <input\n              type=\"number\"\n              min=\"1000\"\n              max=\"3000\"\n              step=\"500\"\n              id=\"animationDuration\"\n              value={this.state.animationDuration}\n              onChange={(event) => {\n                this.setAnimationDuration(event.target.value);\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}